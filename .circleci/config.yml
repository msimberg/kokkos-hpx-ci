version: 2
jobs:
  setup:
    docker:
      - image: stellargroup/hpx:dev
    working_directory: /kokkos-hpx
    steps:
      - run:
          name: Cloning Kokkos development branch
          command: |
            git clone https://github.com/msimberg/kokkos.git
            cd kokkos
            git checkout hpx-backend-updates
      - run:
          name: Configure HPX runtime
          command: |
            printf '[hpx]\nos_threads=2' > hpx.ini
      - persist_to_workspace:
           root: /kokkos-hpx
           paths:
             - ./*
  build_and_test_blocking_0:
    docker:
      - image: stellargroup/hpx:dev
    working_directory: /kokkos-hpx
    environment:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig/
      HPX_INI: /kokkos-hpx/hpx.ini
    steps:
      - attach_workspace:
          at: /kokkos-hpx
      - run:
          # TODO: Add bc to image
          name: Installing bc for Makefiles
          command: |
            apt install -y bc
      - run:
          name: Building Kokkos with HPX backend (blocking, version 0)
          command: |
            mkdir build && cd build
            cmake \
                ../kokkos \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_CXX_COMPILER=$CXX \
                -DCMAKE_CXX_FLAGS="-Werror -Wno-#warnings -DKOKKOS_HPX_IMPLEMENTATION=0" \
                -DKokkos_CXX_STANDARD=17 \
                -DKokkos_ENABLE_TESTS=ON \
                -DKokkos_ENABLE_HPX=ON \
                -DKokkos_ENABLE_DEPRECATED_CODE=OFF \
                -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
                -DKokkos_ENABLE_HPX_ASYNC_DISPATCH=OFF
            make -k -j2 all
      - run:
          name: Running Kokkos tests
          command: |
            cd build
            ctest --output-on-failure
  build_and_test_async_0:
    docker:
      - image: stellargroup/hpx:dev
    working_directory: /kokkos-hpx
    environment:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig/
      HPX_INI: /kokkos-hpx/hpx.ini
    steps:
      - attach_workspace:
          at: /kokkos-hpx
      - run:
          # TODO: Add bc to image
          name: Installing bc for Makefiles
          command: |
            apt install -y bc
      - run:
          name: Building Kokkos with HPX backend (async, version 0)
          command: |
            mkdir build && cd build
            cmake \
                ../kokkos \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_CXX_COMPILER=$CXX \
                -DCMAKE_CXX_FLAGS="-Werror -Wno-#warnings -DKOKKOS_HPX_IMPLEMENTATION=0" \
                -DKokkos_CXX_STANDARD=17 \
                -DKokkos_ENABLE_TESTS=ON \
                -DKokkos_ENABLE_HPX=ON \
                -DKokkos_ENABLE_DEPRECATED_CODE=OFF \
                -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
                -DKokkos_ENABLE_HPX_ASYNC_DISPATCH=ON
            make -k -j2 all
      - run:
          name: Running Kokkos tests
          command: |
            cd build
            ctest --output-on-failure
  build_and_test_blocking_1:
    docker:
      - image: stellargroup/hpx:dev
    working_directory: /kokkos-hpx
    environment:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig/
      HPX_INI: /kokkos-hpx/hpx.ini
    steps:
      - attach_workspace:
          at: /kokkos-hpx
      - run:
          # TODO: Add bc to image
          name: Installing bc for Makefiles
          command: |
            apt install -y bc
      - run:
          name: Building Kokkos with HPX backend (blocking, version 1)
          command: |
            mkdir build && cd build
            cmake \
                ../kokkos \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_CXX_COMPILER=$CXX \
                -DCMAKE_CXX_FLAGS="-Werror -Wno-#warnings -DKOKKOS_HPX_IMPLEMENTATION=1" \
                -DKokkos_CXX_STANDARD=17 \
                -DKokkos_ENABLE_TESTS=ON \
                -DKokkos_ENABLE_HPX=ON \
                -DKokkos_ENABLE_DEPRECATED_CODE=OFF \
                -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
                -DKokkos_ENABLE_HPX_ASYNC_DISPATCH=OFF
            make -k -j2 all
      - run:
          name: Running Kokkos tests
          command: |
            cd build
            ctest --output-on-failure
  build_and_test_async_1:
    docker:
      - image: stellargroup/hpx:dev
    working_directory: /kokkos-hpx
    environment:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig/
      HPX_INI: /kokkos-hpx/hpx.ini
    steps:
      - attach_workspace:
          at: /kokkos-hpx
      - run:
          # TODO: Add bc to image
          name: Installing bc for Makefiles
          command: |
            apt install -y bc
      - run:
          name: Building Kokkos with HPX backend (async, version 1)
          command: |
            mkdir build && cd build
            cmake \
                ../kokkos \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_CXX_COMPILER=$CXX \
                -DCMAKE_CXX_FLAGS="-Werror -Wno-#warnings -DKOKKOS_HPX_IMPLEMENTATION=1" \
                -DKokkos_CXX_STANDARD=17 \
                -DKokkos_ENABLE_TESTS=ON \
                -DKokkos_ENABLE_HPX=ON \
                -DKokkos_ENABLE_DEPRECATED_CODE=OFF \
                -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
                -DKokkos_ENABLE_HPX_ASYNC_DISPATCH=ON
            make -k -j2 all
      - run:
          name: Running Kokkos tests
          command: |
            cd build
            ctest --output-on-failure
  build_and_test_blocking_2:
    docker:
      - image: stellargroup/hpx:dev
    working_directory: /kokkos-hpx
    environment:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig/
      HPX_INI: /kokkos-hpx/hpx.ini
    steps:
      - attach_workspace:
          at: /kokkos-hpx
      - run:
          # TODO: Add bc to image
          name: Installing bc for Makefiles
          command: |
            apt install -y bc
      - run:
          name: Building Kokkos with HPX backend (blocking, version 2)
          command: |
            mkdir build && cd build
            cmake \
                ../kokkos \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_CXX_COMPILER=$CXX \
                -DCMAKE_CXX_FLAGS="-Werror -Wno-#warnings -DKOKKOS_HPX_IMPLEMENTATION=2" \
                -DKokkos_CXX_STANDARD=17 \
                -DKokkos_ENABLE_TESTS=ON \
                -DKokkos_ENABLE_HPX=ON \
                -DKokkos_ENABLE_DEPRECATED_CODE=OFF \
                -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
                -DKokkos_ENABLE_HPX_ASYNC_DISPATCH=OFF
            make -k -j2 all
      - run:
          name: Running Kokkos tests
          command: |
            cd build
            ctest --output-on-failure
  build_and_test_async_2:
    docker:
      - image: stellargroup/hpx:dev
    working_directory: /kokkos-hpx
    environment:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig/
      HPX_INI: /kokkos-hpx/hpx.ini
    steps:
      - attach_workspace:
          at: /kokkos-hpx
      - run:
          # TODO: Add bc to image
          name: Installing bc for Makefiles
          command: |
            apt install -y bc
      - run:
          name: Building Kokkos with HPX backend (async, version 2)
          command: |
            mkdir build && cd build
            cmake \
                ../kokkos \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_CXX_COMPILER=$CXX \
                -DCMAKE_CXX_FLAGS="-Werror -Wno-#warnings -DKOKKOS_HPX_IMPLEMENTATION=2" \
                -DKokkos_CXX_STANDARD=17 \
                -DKokkos_ENABLE_TESTS=ON \
                -DKokkos_ENABLE_HPX=ON \
                -DKokkos_ENABLE_DEPRECATED_CODE=OFF \
                -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
                -DKokkos_ENABLE_HPX_ASYNC_DISPATCH=ON
            make -k -j2 all
      - run:
          name: Running Kokkos tests
          command: |
            cd build
            ctest --output-on-failure

workflows:
  version: 2
  nightly:
  #  triggers:
  #    - schedule:
  #        cron: "0 0 * * * "
  #        filters:
  #          branches:
  #            only:
  #              - master
    jobs:
      - setup
      - build_and_test_blocking_0:
          requires:
            - setup
      - build_and_test_async_0:
          requires:
            - setup
      - build_and_test_blocking_1:
          requires:
            - setup
      - build_and_test_async_1:
          requires:
            - setup
      - build_and_test_blocking_2:
          requires:
            - setup
      - build_and_test_async_2:
          requires:
            - setup

